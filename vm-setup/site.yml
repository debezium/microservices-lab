---
- hosts: all
  remote_user: root
  become: yes
  become_user: root
  vars:
    tools_dir: /home/build/tools
    downloads_dir: /home/build/downloads
    openshift_config_dir: /var/lib/origin/openshift.local.config
    openshift_node_config_file: "{{ openshift_config_dir }}/node-localhost/node-config.yaml"
    openshift_version: 3.11.0
    openshift_hash: 0cbc58b
    openshift_tag: v3.11
    debezium_tag: 0.8
    strimzi_tag: 0.8.0
    prometheus_tag: v2.4.0
    elasticsearch_tag: 6.4.2

  tasks:
  - name: upgrade all packages
    dnf: name="*" state=latest
  - name: Have common tools
    dnf: name={{item}} state=latest
    with_items:
       - git
       - wget
       - htop
       - acl
       - dnf-plugins-core
       - bash-completion
       - libselinux-python
       - jq
  - name: have build user
    user:
      name: build
      shell: /bin/bash

  - name: Have docker repo
    shell:  'dnf config-manager \
      --add-repo \
      https://download.docker.com/linux/fedora/docker-ce.repo'
  - name: Have dnf cache updated
    shell: 'dnf makecache'
  - name: Have docker-ce
    dnf: name=docker-ce
  - name: add docker group
    group: name=docker state=present
  - name: Have /etc/docker
    file: path=/etc/docker state=directory
  - name: Have daemon.json
    copy:
      src: docker_daemon.json
      dest: /etc/docker/daemon.json

  - name: Ensure Docker is started
    systemd:
      state: started
      enabled: yes
      name: docker

  - name: add wheel group
    group:
      name: wheel
      state: present
  - name: Allow wheel group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: visudo -cf %s

  - name: add user
    user: name=build groups=docker,wheel state=present append=yes

  - name: set-up build environment
    block:
      - name: Have {{ tools_dir }}
        file: path={{ tools_dir }} state=directory
      - name: Have {{ downloads_dir }}
        file: path={{ downloads_dir }} state=directory

      - name: Have OpenShift {{ openshift_version }}
        unarchive:
          src: https://github.com/openshift/origin/releases/download/v{{ openshift_version }}/openshift-origin-client-tools-v{{ openshift_version }}-{{ openshift_hash }}-linux-64bit.tar.gz
          dest: "{{ tools_dir }}"
          remote_src: True
          creates: "{{ tools_dir }}/openshift-origin-client-tools-v{{ openshift_version }}-{{ openshift_hash }}-linux-64bit"

      - name: Pull Docker images
        shell: "echo debezium/example-mysql:{{ debezium_tag }} fabric8/s2i-java openshift/origin-node:{{ openshift_tag }} openshift/origin-control-plane:{{ openshift_tag }} openshift/origin-docker-builder:{{ openshift_tag }} openshift/origin-haproxy-router:{{ openshift_tag }} openshift/origin-deployer:{{ openshift_tag }} openshift/origin-hypershift:{{ openshift_tag }} openshift/origin-hyperkube:{{ openshift_tag }} openshift/origin-cli:{{ openshift_tag }} openshift/origin-pod:{{ openshift_tag }} openshift/origin-web-console:{{ openshift_tag }} openshift/origin-docker-registry:{{ openshift_tag }} openshift/origin-service-serving-cert-signer:{{ openshift_tag }} strimzi/user-operator:{{ strimzi_tag }} strimzi/topic-operator:{{ strimzi_tag }} strimzi/cluster-operator:{{ strimzi_tag }} strimzi/kafka-stunnel:{{ strimzi_tag }} strimzi/entity-operator-stunnel:{{ strimzi_tag }} strimzi/zookeeper-stunnel:{{ strimzi_tag }} strimzi/zookeeper:{{ strimzi_tag }} strimzi/kafka:{{ strimzi_tag }} strimzi/kafka-connect:{{ strimzi_tag }} strimzi/kafka-connect-s2i:{{ strimzi_tag }} strimzilab/grafana-openshift:latest prom/prometheus:{{ prometheus_tag }} elasticsearch:{{ elasticsearch_tag }} centos/postgresql-95-centos7 debezium/msa-lab-s2i | xargs -P4 -n1 docker pull"

      - name: Configure mmap for Elasticsearch
        shell: "sysctl -w vm.max_map_count=262144"

      - name: Have .bashrc
        copy:
          src: user_bashrc
          dest: /home/build/.bashrc
          mode: 0644

    become: true
    become_user: root
